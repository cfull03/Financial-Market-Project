[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "dsproject"
version = "0.1.0"
description = "EDA-first data project: ingest → split → clean → validate → report"
readme = "README.md"
authors = [{ name = "Christian Fullerton", email = "christianfullerton@icloud.com" }]
license = { text = "MIT" }
requires-python = ">=3.10"
dependencies = [
  "numpy>=1.26",
  "pandas>=2.2",
  "matplotlib>=3.8",
  "pyyaml>=6.0",
  "typer[all]>=0.12",
  "scikit-learn>=1.4",
  "torch>=2.2",
]
keywords = ["eda", "data", "cli", "yaml", "pandas"]
classifiers = [
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
]

[project.optional-dependencies]
test = [
  "pytest>=8.0",
]

[project.scripts]
# Expose the CLI after install: `dsproj`
"dsproj" = "dsproject.pipelines.cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 100
target-version = ["py310", "py311"]

# ---------------- Ruff (imports & lint) ----------------
[tool.ruff]
line-length = 100
# Match the runtime you target in CI
target-version = "py311"
extend-exclude = [
  "data",
  "reports",
  "models",
  "artifacts",
  ".ipynb_checkpoints",
]

[tool.ruff.lint]
# Enable common rules + import sorting (I)
select = ["E", "F", "I", "B", "C4"]
# Long lines handled by Black
ignore = ["E501"]

# Optional: if you later add pydocstyle or other plugins, you can per-file ignore here
[tool.ruff.lint.per-file-ignores]
# "src/dsproject/pipelines/cli.py" = ["D" ]
"src/dsproject/pipelines/cli.py" = ["B008", "D"]


# If you ever use Ruff's formatter; we still run Black in CI, so this is optional
[tool.ruff.format]
quote-style = "double"
